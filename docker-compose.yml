version: "3.6"
services:
  web:
    container_name: NKUST_AP_API
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
    environment:
      - REDIS_URL=${REDIS_URL}
      - NEWS_ADMIN=${NEWS_ADMIN}
      - NEWS_ADMIN_ACCOUNT=${NEWS_ADMIN_ACCOUNT}
      - NEWS_ADMIN_PASSWORD=${NEWS_ADMIN_PASSWORD}
    command: ["gunicorn", "-c", "gunicorn_cfg.py", "web-server:app"]
    networks:
      - redis-net
      - open-net
    depends_on:
      - redis
  redis:
    image: "redis:alpine"
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - redis-net
    volumes:
      - redis-data:/data

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx/nginx_nkust_api.conf:/etc/nginx/conf.d/nginx_nkust_api.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - open-net
    depends_on:
      - web
      - certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  redis-net:
  open-net:
volumes:
  redis-data:
